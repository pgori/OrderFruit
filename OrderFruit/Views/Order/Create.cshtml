@model  OrderFruit.ViewModel.OrderViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Checkout</h2>


@using (Html.BeginForm("CreateOrder", "Order", FormMethod.Post, new { orderViewModel = Model}))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Shipping Address</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Order.Customer.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order.Customer.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order.Customer.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order.Customer.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order.Customer.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order.Customer.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order.Customer.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order.Customer.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order.Customer.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order.Customer.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order.Customer.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order.Customer.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreditCardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreditCardNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreditCardNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*@Html.HiddenFor(model => Model.Order.FruitOrder)*@
            @Html.HiddenFor(model => Model.Order.TotalCost)
            @Html.HiddenFor(model => Model.Order.TotalWeight)
            <input type="submit" value="Pay Now" class="btn btn-default" />
        </div>
    </div>
</div>
}

<table class="table">
    <tr>
        <th>Fruit</th>
        <th>Weight</th>
        <th>Cost</th>
    </tr>
    @foreach (var cart in Model.Order.FruitOrder)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => cart.Fruit.Name)</td>
            <td>@Html.DisplayFor(modelItem => cart.Fruit.Weight) kg</td>
            <td>@Html.DisplayFor(modelItem => cart.Fruit.Cost) euro</td>
        </tr>
    }
    <tr>
        <td>Total Cost</td>
        <td>@Html.DisplayFor(model => model.Order.TotalWeight) kg</td>
        <td>@Html.DisplayFor(model => model.Order.TotalCost) euro</td>
    </tr>
</table>

<div>
    @Html.ActionLink("Back to List", "Index", "Fruit")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
